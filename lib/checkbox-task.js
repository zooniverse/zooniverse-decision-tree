// Generated by CoffeeScript 1.7.1
(function() {
  var CheckboxTask, Task, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Task = ((_ref = window.DecisionTree) != null ? _ref : require('./decision-tree')).Task;

  CheckboxTask = (function(_super) {
    __extends(CheckboxTask, _super);

    function CheckboxTask() {
      return CheckboxTask.__super__.constructor.apply(this, arguments);
    }

    CheckboxTask.prototype.type = 'checkbox';

    CheckboxTask.prototype.choiceTemplate = function(choice, i) {
      return "<label> <input type='checkbox' name='" + this.key + "' value='" + choice.value + "' data-choice-index='" + i + "' /> " + choice.label + " </label>";
    };

    CheckboxTask.prototype.getValue = function() {
      var checkedInputs, choice, choiceIndex, input, _i, _len, _results;
      checkedInputs = this.el.querySelectorAll(':checked');
      _results = [];
      for (_i = 0, _len = checkedInputs.length; _i < _len; _i++) {
        input = checkedInputs[_i];
        choiceIndex = input.getAttribute('data-choice-index');
        choice = this.choices[choiceIndex];
        _results.push(choice.value);
      }
      return _results;
    };

    CheckboxTask.prototype.reset = function(values) {
      var choice, choiceIndex, i, value, _i, _j, _len, _len1, _ref1, _results;
      CheckboxTask.__super__.reset.apply(this, arguments);
      if (values != null) {
        _results = [];
        for (_i = 0, _len = values.length; _i < _len; _i++) {
          value = values[_i];
          _ref1 = this.choices;
          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
            choice = _ref1[i];
            if (choice.value === value) {
              choiceIndex = i;
            }
          }
          _results.push(this.el.querySelector("[data-choice-index='" + choiceIndex + "']").checked = true);
        }
        return _results;
      }
    };

    return CheckboxTask;

  })(Task);

  window.DecisionTree.CheckboxTask = CheckboxTask;

  window.DecisionTree.registerTask(CheckboxTask);

  if (typeof module !== "undefined" && module !== null) {
    module.exports = CheckboxTask;
  }

}).call(this);
